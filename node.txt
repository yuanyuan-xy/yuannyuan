添加指定文件到暂存区  $ git add 文件名
以空格隔开可以一次 add 多个文件  git add [file1] [file2] ...
添加指定目录到暂存区，包括子目录  git add [dir] [file] [dir] [file] [file] ...
添加当前目录的所有文件到暂存区，包括子目录   $ git add .


提交暂存区到仓库区   $ git commit -m [message]
提交暂存区的指定文件到仓库区   $ git commit [file1] [file2] ... -m [message]
提交工作区和暂存区自上次commit之后的变化，直接到仓库区 # 注意：不包括未跟踪文件，即不包含没有被GIt管理过的文件     $ git commit -a -m "提交日志



查看状态  $ gitk
显示有变更的文件   $ git status
显示当前分支的版本历史   $ git log
简略查看历史版本   $ git log --oneline


撤销操作
恢复暂存区的指定文件到工作区   $ git checkout [file]
恢复暂存区的所有文件到工作区   $ git checkout .
恢复某个commit的指定文件到暂存区和工作区   $ git checkout [commit版本号] [file]
重置暂存区的指定文件，与上一次 commit 保持一致，但工作区不变   $ git reset [file]
重置暂存区与工作区，与上一次commit保持一致   $ git reset --hard


历史穿梭
想要回退到历史的某个版本，可以使用 git checkout 版本号
回到历史的某个版本之后，需要使用 git reflog --oneline 查看所有的版本
如果向回到最后的一次提交状态，可以使用最后的版本号，也可以使用 git checkout master


创建一个分支，名字叫做dev   $ git branch dev
切换分支命令；切换到dev分支上   $ git checkout dev
也可以使用下面的命令，代替上面两个命令；下面的命令表示创建并切换分支到dev上   $ git checkout -b dev
查看当前分支   $ git branch
合并分支   $ git merge dev
合并完成后删除分支   $ git branch -d dev

推送到远程仓库  $ git push
